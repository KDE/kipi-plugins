KIPIPLUGINS PROJECT

-- AUTHORS ------------------------------------------------------------

See AUTHORS file for details.

-- ABOUT --------------------------------------------------------------

Libkipi and kipi-plugins allow image applications to use a plugin architecture for additional functionalities.

Notes:

kipi-plugins is based in part on the work of the Independent JPEG Group.

-- BUGS ---------------------------------------------------------------

IMPORTANT : the bugreports and wishlist are hosted by the KDE bugs report 
system who can be contacted by the standard Kde help menu of plugins dialog. 

The current Kipi bugs and devel wishes reported to the Kde bugs report can be
seen at this url :

http://bugs.kde.org/buglist.cgi?product=kipiplugins&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED

-- INSTALL ------------------------------------------------------------

In order to compile, especially when QT4/Qt5 are installed at the same time,
just use something like that:

# export VERBOSE=1
# export QTDIR=/usr/lib/qt5/
# export PATH=$QTDIR/bin:$PATH
# cmake .
# make
# sudo make install

Usual CMake options :

-DCMAKE_INSTALL_PREFIX : decide where the program will be install on your computer.
-DCMAKE_BUILD_TYPE     : decide which type of build you want. You can chose between "debugfull", "debug", "profile", "relwithdebinfo" and "release". The default is "relwithdebinfo" (-O2 -g).

Compared to old autoconf options:

"cmake . -DCMAKE_BUILD_TYPE=debugfull" is equivalent to "./configure --enable-debug=full"
"cmake . -DCMAKE_INSTALL_PREFIX=/usr"  is equivalent to "./configure --prefix=/usr"

More details can be found at this url: http://techbase.kde.org/Development/Tutorials/CMake#Environment_Variables

Note: To know KDE install path on your computer, use 'kf5-config --prefix' command line like this (with full debug object enabled):

"cmake . -DCMAKE_BUILD_TYPE=debugfull -DCMAKE_INSTALL_PREFIX=`kf5-config --prefix`"
